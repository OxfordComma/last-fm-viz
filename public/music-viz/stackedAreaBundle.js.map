{"version":3,"file":"stackedAreaBundle.js","sources":["../../js/music/loadStackedArtistData.js","../../js/music/colorLegend.js","../../js/music/stackedAreaVertical.js","../../js/music/stackedArea_main.js"],"sourcesContent":["import { csv, hierarchy, json } from 'd3';\n\nexport const loadStackedArtistData = (url, startDate, endDate) => {\n  return json(url).then(trackData => {\n\n    var sortedGenreList = [];\n    var sortedArtistList = [];\n    var sortedTrackList = [];\n    var totalPlaysByArtist = {};\n    var totalPlaysByGenre = {};\n    var totalPlaysByTrack = {};\n    var deepestGenresByArtist = {};\n    \n    var topGenres = [];\n    var topArtists = [];\n    var topTracks = [];\n    var topTracksUniqueArtists = [];\n    var byWeekPlaysGenre = [];\n    var byWeekPlaysArtist = [];\n    var byWeekPlaysTrack = [];\n    var weekDict = {};\n    \n    trackData.forEach(d => {\n      d.listen_date = new Date(d.listen_date);\n      if (d.listen_date < startDate || d.listen_date > endDate)\n        return;\n\n      // Convert time since Jan 1 from msec to # of weeks\n      // 1000 msec/sec, 60 sec/min, 60 min/hr, 24 hr/day, 7 days/week, +1 so it starts on week 1\n      d.weekNum = (parseInt((d.listen_date - startDate)/1000/60/60/24/7 + 1));\n      \n      if (totalPlaysByArtist[d.artist] === undefined)\n        totalPlaysByArtist[d.artist] = 1;\n      else\n        totalPlaysByArtist[d.artist] += 1;\n\n      if (totalPlaysByTrack[d.track] === undefined)\n        totalPlaysByTrack[d.track] = {artist: d.artist, track: d.track, plays: 1};\n      else\n        totalPlaysByTrack[d.track].plays += 1;\n      \n      if (weekDict[d.weekNum] === undefined)\n        weekDict[d.weekNum] = {artists: {}, genres: {}, tracks: {}};\n      \n      if (weekDict[d.weekNum].artists[d.artist] === undefined)\n        weekDict[d.weekNum].artists[d.artist] = 1;\n      else\n        weekDict[d.weekNum].artists[d.artist] += 1;\n       \n      if (weekDict[d.weekNum].tracks[d.track] === undefined)\n        weekDict[d.weekNum].tracks[d.track] = 1;\n      else\n        weekDict[d.weekNum].tracks[d.track] += 1;\n    });\n    \n    // Sort the list of genres according to total play count\n    sortedArtistList = Object.keys(totalPlaysByArtist).sort((a, b) => totalPlaysByArtist[b] - totalPlaysByArtist[a]); \n    sortedTrackList = Object.keys(totalPlaysByTrack).sort((a, b) => totalPlaysByTrack[b].plays - totalPlaysByTrack[a].plays);\n    Object.keys(weekDict).forEach(w => {\n      const i = +w - 1;\n      var obj = {week: i + 1};\n      \n      topArtists = sortedArtistList//.slice(0, numArtists);\n      topTracks = sortedTrackList\n      \n      var artistObj = {week: i + 1};\n      var trackObj = {week: i + 1};\n      \n      topArtists.forEach(a => {\n        artistObj[a] = weekDict[w].artists[a] ? weekDict[w].artists[a] : 0;\n      });\n            \n      byWeekPlaysArtist.push(artistObj);\n\n      topTracks.forEach(g => {\n        trackObj[g] = weekDict[w].tracks[g] ? weekDict[w].tracks[g] : 0;\n      });\n      byWeekPlaysTrack.push(trackObj); \n    });\n\n    var toReturn = {}; \n    toReturn.byWeekPlaysArtist = byWeekPlaysArtist;\n    toReturn.byWeekPlaysTrack = byWeekPlaysTrack;\n\n    toReturn.totalPlaysByArtist = totalPlaysByArtist;\n    toReturn.totalPlaysByTrack = totalPlaysByTrack;\n\n    toReturn.deepestGenresByArtist = deepestGenresByArtist;\n    toReturn.topGenres = topGenres;\n    toReturn.topArtists = topArtists;\n    toReturn.topTracks = topTracks;\n\n    toReturn.trackData = trackData;\n\n    console.log(toReturn);  \n    return toReturn;  \n  }); \n};","export const colorLegend = (selection, props) => {\n  const {\n    colorScale,\n    circleRadius,\n    spacing,\n    textOffset,\n    backgroundRectWidth,\n    onClick,\n    selectedLegendList,\n    numArtists\n  } = props;      \n\n  const backgroundRect = selection.selectAll('rect')\n    .data([null]);             \n  \n  const n = colorScale.domain().length; \n\n  backgroundRect.enter().append('rect')\n    .merge(backgroundRect)\n      .attr('x', -circleRadius * 2)   \n      .attr('y', -circleRadius * 2)   \n      .attr('rx', circleRadius * 2)   \n      .attr('width', backgroundRectWidth)\n      .attr('height', spacing * n + circleRadius * 2) \n      .attr('fill', 'black')\n      .attr('opacity', 0);\n\n  const groups = selection.selectAll('.legend').data(colorScale.domain().slice(0, numArtists));\n  \n  const groupsEnter = groups\n    .enter().append('g')\n      .attr('class', 'legend');\n  \n  groupsEnter\n    .merge(groups)\n      .attr('transform', (d, i) => `translate(0, ${i * spacing})`)\n      .on('click', onClick);\n      \n  groupsEnter\n    .merge(groups)\n      .transition().duration(200)\n      .attr('transform', (d, i) => `translate(0, ${i * spacing})`)\n      .attr('opacity', d => (selectedLegendList.length == 0 || selectedLegendList.includes(d)) ? 1 : 0.2)\n\n  groups.exit().remove();\n  \n  groupsEnter.append('circle')\n    .merge(groups.select('circle')) \n      .attr('r', circleRadius)\n      .attr('fill', colorScale);      \n  \n  groupsEnter.append('text')\n    .merge(groups.select('text'))   \n      .text(d => d)\n      .attr('dy', '0.32em')\n      .attr('x', textOffset)\n      // .attr('color', colorScale)\n}","import { \n  select, \n  scaleTime, \n  scaleLinear, \n  extent,\n  axisLeft,\n  axisBottom,\n  format,\n  area,\n  stack,\n  max,\n  sum,\n  csv\n} from 'd3';\nimport { colorLegend } from './colorLegend';\n\nexport const stackedAreaVertical = (selection, props) => {\n  const {\n    dataToStack,\n    topArtists,\n    colorScale,\n    selectedLegendList,\n    width,\n    height,\n    numArtists,\n    onClick,\n    year,\n    amplitude,\n    position,\n    stackOffset,\n    stackOrder\n  } = props;\n\n  const topArtistsTrimmed = topArtists.slice(0, numArtists);\n  const margin = {left: 0, right: 0}\n  const innerWidth = width - margin.left - margin.right\n  \n  selection\n    .attr('transform', `rotate(-90)`);\n\n  const g = selection.selectAll('.container').data([null]);\n  const gEnter = g.enter()\n    .append('g')\n      .attr('class', 'container');\n\n  const h = selection.selectAll('.axes').data([null]);\n  const hEnter = h.enter()\n    .append('g')\n      .attr('class', 'axes');\n\n  const artistText = selection.selectAll('.artist-text').data(selectedLegendList)\n  const artistTextEnter = artistText.enter().append('g')\n      .attr('class', 'artist-text d-block d-md-none')\n      .attr('transform', 'translate(-20, 95) rotate(90)')\n  \n  artistTextEnter.merge(artistText)\n    .append('text')\n      .transition()\n        .duration(500)\n      .attr('x', '0')\n      .attr('y', '0')\n      .attr('fill', d => colorScale(d))\n      .text(d => d)\n\n  artistText.exit()\n    .remove()\n \n  const xValue = d => d.week;\n\n  const xAxisLabel = 'Week';\n  const yAxisLabel = 'Plays';\n  \n  // X-axis and scale\n  // This converts from the week scale to a day scale\n  const getDateFromWeek = (weekNumber) => {\n    const numberOfDays = 7*(weekNumber-1)+1;\n    return new Date(year, 0, numberOfDays);\n  }\n\n  const xScale = scaleTime()\n    .domain([\n      new Date(year, 0, 1), \n      new Date(year, 11, 31)])\n      // getDateFromWeek(max(Object.keys(dataToStack).map(d => parseInt(d, 10))))])\n    .range([0, -height])\n    // .nice()\n\n  const yScale = scaleLinear()\n    .domain([0, max(dataToStack.map(d => sum(Object.values(d))))])\n    .range([0, width * amplitude])\n    .nice(); \n  \n  const xAxis = axisBottom(xScale)\n    .ticks(12)\n    .tickSize(0)\n    // .tickPadding(15)\n    .tickFormat(d3.timeFormat('%B'));\n  \n  const xAxisG = g.select('.x-axis');\n  const xAxisGEnter = gEnter\n    .append('g').attr('class', 'x-axis');\n  \n  xAxisGEnter\n    .merge(xAxisG)\n      .call(xAxis)\n      .selectAll('text')\n        .attr('text-anchor', 'start')\n        .attr('transform', `rotate(90) translate(0, 0)`);\n\n  xAxisGEnter.merge(xAxisG).selectAll('.domain').remove()\n  \n  // xAxisGEnter.append('text')\n  //     .attr('class', 'axis-label')\n  //     .attr('transform', `rotate(90)`)\n  //     .attr('y', 50)\n  //     .attr('x', 0 / 2)\n  //     .attr('fill', 'black')\n  //     .text(xAxisLabel);\n \n  const yAxisTickFormat = number =>\n    format('.2s')(number)\n      .replace('.0', '');\n  \n  const yAxis = axisLeft(yScale)\n    .ticks('none')\n    // .tickSize(-width)\n    // .tickPadding(5)\n    // .tickFormat(yAxisTickFormat);\n  \n  const yAxisG = g.select('.y-axis');\n  const yAxisGEnter = gEnter\n    .append('g')\n      .attr('class', 'y-axis');\n  \n  yAxisGEnter\n    .merge(yAxisG)\n      .transition().duration(200)\n      .call(yAxis);\n  \n  yAxisGEnter.merge(yAxisG).selectAll('.domain').remove();\n  \n  // yAxisGEnter.append('text')\n  //   .attr('class', 'axis-label')\n  //   .attr('y', -35)\n  //   .attr('x', -height / 2)\n  //   .attr('fill', 'black')\n  //   .attr('transform', `rotate(-90)`)\n  //   .attr('text-anchor', 'middle')\n  //   .text(yAxisLabel);\n  \n  var stack = d3.stack(dataToStack)\n    .keys(topArtistsTrimmed)\n    .offset(stackOffset)\n    .order(stackOrder)\n\n  var series = stack(dataToStack);\n\n  const areaGenerator = area()\n    .x(d => xScale(getDateFromWeek(d.data.week)))\n    .y0(d => yScale(selectedLegendList.length != 0 && (selectedLegendList.includes(d.artist)) ? 0 : d[0]))\n    .y1(d => yScale(selectedLegendList.length != 0 && (selectedLegendList.includes(d.artist)) ? d[1] - d[0] : d[1]))\n    .curve(d3.curveBasis);\n  \n  const lastYValue = d =>\n    yValue(d.values[d.values.length - 1]);\n  \n  const lines = selection.selectAll('.line-path').data(series);\n\n  const linesEnter = lines.enter()\n    .append('path')\n      .attr('class', 'line-path') \n      .attr('fill', d => colorScale(d.key))\n      .attr('transform', `translate(0, ${(width)/2 + position})`)\n\n  lines.merge(linesEnter)\n    .on('click', d => onClick(d.key))\n    .attr('d', areaGenerator)\n    .append('title')\n      .text(d => d.key)\n  \n  lines.merge(linesEnter)\n    .transition()\n      .duration(200)\n        .attr('opacity', d => {\n          return (selectedLegendList.length == 0 || selectedLegendList.includes(d.key)) ? 1 : 0})\n        .attr('stroke-width', d => (selectedLegendList.length != 0 || selectedLegendList.includes(d.key)) ? 0.05 : 0);\n\n  // const annotations = []\n  // csv('https://raw.githubusercontent.com/OxfordComma/oxfordcomma.github.io/master/concert_dates.csv').then(annotationData => {\n  //   console.log(annotationData)\n  //   annotationData.forEach(a => {\n  //     a.date = new Date(a.date)\n  //     // console.log(a.date)\n  //     // console.log(xScale(a.date))\n  //     annotations.push({\n  //       note: {\n  //         title: a.artists,\n  //         label: a.date.getMonth()+1 + '/' + a.date.getDate() + ' at ' + a.venue\n  //       },\n  //       x: 0,\n  //       y: -xScale(a.date), \n  //       dx: 0,\n  //       dy: 0,\n  //       connector: {\n  //         curve: d3.curveLinear,\n  //         points: [[0, 0]]\n  //       },\n  //       color: 'black'\n  //     })\n  //   });\n\n  //   const makeAnnotations = d3.annotation()\n  //   .editMode(true)\n  //   //also can set and override in the note.padding property\n  //   //of the annotation object\n  //   .notePadding(15)\n  //   .type(d3.annotationCallout)\n  //   .annotations(annotations)\n\n  //   d3.select(\".stacked-area-container\")\n  //     .append(\"g\")\n  //     .attr(\"class\", \"annotation-group\")\n  //     .attr('transform', 'rotate(90)')\n  //     .call(makeAnnotations)\n  //   console.log(annotations)\n\n  // });\n\n  \n};\n","import {\n  select,\n  json,\n  cluster,\n  hierarchy,\n  linkHorizontal,\n  scaleOrdinal,\n  max,\n  schemeCategory10,\n  interpolateRainbow,\n  // stackOrderInsideOut\n} from 'd3';\n\nimport { loadStackedArtistData } from './loadStackedArtistData';\nimport { treemap } from './treemap';\nimport { stackedAreaHorizontal } from './stackedAreaHorizontal';\nimport { stackedAreaVertical } from './stackedAreaVertical';\nimport { colorLegend } from './colorLegend';\n\nvar jsonData, artistData;\nvar byWeekPlaysGenre, totalPlaysByGenre;\nvar byWeekPlaysArtist, totalPlaysByArtist;\nvar byWeekPlaysTrack, totalPlaysByTrack;\nvar artistColorScale, genreColorScale, trackColorScale;\nvar topArtists, topGenres, topTracks;\nvar selectedArtists = []; \nvar selectedTracks = [];\nvar deepestGenresByArtist;\nvar byWeekPlays;\nvar numStackedAreaArtists = 25;\n// var numStackedTracks = 30;\nvar legendWidth = 200;\nconst url = '/data/music/tracks/'\n\n// var stackOffset = d3.stackOffsetSilhouette;\nvar stackOffset = d3.stackOffsetWiggle;\nvar stackOrder = d3.stackOrderInsideOut;\n\n\nvar verticalAreaG, artistLegendG;\nvar areaWidth, areaHeight;\n\nvar script_tag = document.getElementById('year')\nvar year = script_tag.getAttribute(\"data-year\").toString();\nvar startDate = new Date(year, '00', '01');\nvar endDate = new Date((+year+1).toString(), '00', '01');\n\nloadStackedArtistData(url+year.toString(), startDate, endDate).then(data => {\n  jsonData = data.jsonData;\n  artistData = data.artistData;\n  byWeekPlaysGenre = data.byWeekPlaysGenre;\n  byWeekPlaysArtist = data.byWeekPlaysArtist;\n  byWeekPlaysTrack = data.byWeekPlaysTrack;\n\n  topGenres = data.topGenres;\n  topArtists = data.topArtists;\n  // topTracks = data.topTracks;\n\n  var topArtistsTrimmed = topArtists.slice(0, numStackedAreaArtists);\n  // var topTracksTrimmed = topTracks.slice(0, numStackedTracks);\n\n  areaWidth = document.getElementById('stacked-area-artist').clientWidth;\n  areaHeight = window.innerHeight - document.getElementById('navbar-placeholder').clientHeight;  \n\n  deepestGenresByArtist = data.deepestGenresByArtist;\n  totalPlaysByArtist = data.totalPlaysByArtist;\n\n  artistColorScale = scaleOrdinal()\n    .domain(topArtistsTrimmed);\n  const n = artistColorScale.domain().length;\n  artistColorScale\n    .range(artistColorScale.domain().map((d, i) => interpolateRainbow(i/(n+1))));\n\n  // trackColorScale = scaleOrdinal()\n  //   .domain(topTracksTrimmed);\n  // const m = trackColorScale.domain().length;\n  // trackColorScale\n  //   .range(trackColorScale.domain().map((d, i) => interpolateRainbow(i/(m+1))));\n\n \tgenreColorScale = scaleOrdinal()\n    .domain(topGenres)\n    .range(schemeCategory10);\n\n  const verticalAreaSvg = select('.stacked-area-artist-svg')\n    .attr('height', areaHeight)\n    .attr('width', document.getElementById('stacked-area-artist').clientWidth)\n\n  verticalAreaG = verticalAreaSvg\n    .append('g')\n      .attr('class', 'stacked-area-container')\n\n  artistLegendG = verticalAreaSvg\n    .append('g')\n      .attr('class', 'legend-container d-none d-md-block')\n      .attr('transform', `translate(${document.getElementById('stacked-area-artist').clientWidth - legendWidth},${10})`);\n  \n  render();\n})\n\nconst onClickArtist = d => {\n  if (!selectedArtists.includes(d))\n    selectedArtists.push(d);\n  else\n    selectedArtists = selectedArtists.filter(val => val != d);\n  \n  console.log(selectedArtists)\n  render(); \n};\n\nconst onClickArtistUnique = d => {\n  if (selectedArtists.length == 0)\n    selectedArtists = [d]\n  else\n    selectedArtists = []\n  \n  console.log(selectedArtists)\n  render(); \n};\n\nconst onClickTrack = d => {\n  if (!selectedTracks.includes(d))\n    selectedTracks.push(d);\n  else\n    selectedTracks = selectedTracks.filter(val => val != d);\n  \n  console.log(selectedTracks)\n  render(); \n};\n\nconst render = () => {\n  verticalAreaG.call(stackedAreaVertical, {\n    dataToStack: byWeekPlaysArtist,\n    topArtists: topArtists,\n    colorScale: artistColorScale,\n    selectedLegendList: selectedArtists,\n    width: areaWidth,\n    height: areaHeight,\n    numArtists: numStackedAreaArtists,\n    onClick: onClickArtistUnique,\n    year: year,\n    amplitude: 1,\n    position: -100,\n    stackOffset: stackOffset,\n    stackOrder: stackOrder\n  });\n\n  artistLegendG.call(colorLegend, {\n    colorScale: artistColorScale,\n    circleRadius: 5,\n    spacing: 17,\n    textOffset: 12,\n    backgroundRectWidth: legendWidth,\n    onClick: onClickArtist,\n    selectedLegendList: selectedArtists\n  });\n\n}"],"names":["json","scaleTime","scaleLinear","max","sum","axisBottom","axisLeft","area","scaleOrdinal","interpolateRainbow","schemeCategory10","select"],"mappings":"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"}